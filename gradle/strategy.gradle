project.sourceCompatibility = 1.7
project.targetCompatibility = 1.7

[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

sourceSets.test.resources.srcDirs = ["src/test/java", "src/test/resources"]

configurations.all {
	exclude group: "commons-logging"
	exclude module: "slf4j-log4j12"
	exclude module: "hibernate-jpa-2.0-api"
	//testCompile.extendsFrom crosstest  // testCompile이 crosstest에 의존하게 변경
	//crosstest
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if ((details.requested.group == 'org.springframework') && (details.requested.name != 'spring-test-mvc') ) {
		  details.useVersion springVersion
		}
		if (details.requested.group == 'org.springframework.security') {
		  details.useVersion springSecurityVersion
		}
		if (details.requested.group == 'org.slf4j') {
		  details.useVersion slf4jVersion
		}
	}
	resolutionStrategy.failOnVersionConflict()
	// don't cache changing modules at all
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	// cache dynamic versions for 10 minutes
	resolutionStrategy.cacheDynamicVersionsFor 10*60, 'seconds'
	resolutionStrategy.forcedModules = ["org.jboss.logging:jboss-logging:$jbossLoggingVersion",
										"xml-apis:xml-apis:$xmlApisVersion",
										"org.hamcrest:hamcrest-core:$hamcrestVersion",
										"org.javassist:javassist:$javassistVersion",
										"org.objenesis:objenesis:$objenesisVersion",
										"org.aspectj:aspectjrt:$aspectjVersion",
										"net.sf.ehcache:ehcache-core:$ehcacheVersion",
										"org.hibernate:hibernate-entitymanager:$hibernateVersion",
										"com.google.guava:guava:$guavaVersion"]
}